{"version":3,"sources":["constants/actionTypes.js","reducers/index.js","reducers/posts.js","api/index.js","components/Posts/Post/styles.js","components/Posts/Post/Post.js","actions/posts.js","components/Posts/styles.js","components/Posts/Posts.js","components/Form/styles.js","components/Form/Form.js","styles.js","images/memories.png","App.js","index.js"],"names":["CREATE","UPDATE","DELETE","FETCH_ALL","LIKE","reducers","combineReducers","posts","action","type","payload","map","post","_id","filter","url","likePost","id","axios","patch","updatePost","updatedPost","deletePost","delete","makeStyles","media","height","paddingTop","backgroundColor","border","fullHeightCard","card","display","flexDirection","justifyContent","borderRadius","position","overlay","top","left","color","overlay2","right","grid","details","margin","title","padding","cardActions","Post","setCurrentId","dispatch","useDispatch","classes","useStyles","Card","className","CardMedia","image","selectedFile","Typography","variant","creator","moment","createdAt","fromNow","Button","style","size","onClick","fontSize","component","tags","tag","gutterBottom","CardContent","message","CardActions","a","api","data","console","log","likeCount","theme","mainContainer","alignItems","smMargin","spacing","actionDiv","textAlign","Posts","useSelector","state","length","Grid","container","item","xs","sm","md","CircularProgress","root","paper","form","flexWrap","fileInput","width","buttonSubmit","marginBottom","Form","currentId","useState","postData","setPostData","find","useEffect","clear","Paper","autoComplete","noValidate","onSubmit","e","preventDefault","newPost","createPost","TextField","name","label","fullWidth","value","onChange","target","multiline","rows","split","multiple","onDone","base64","appBar","heading","marginLeft","breakpoints","down","App","get","Container","maxWidth","AppBar","align","src","memories","alt","Grow","in","justify","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.198364d5.chunk.js","sourcesContent":["export const CREATE = 'CREATE';\nexport const UPDATE = 'UPDATE';\nexport const DELETE = 'DELETE';\nexport const FETCH_ALL = 'FETCH_ALL';\nexport const LIKE = 'LIKE';","import { combineReducers } from \"redux\";\n\nimport posts from \"./posts\";\n\n//the names in combineReducers'll be used inside useSelector state.posts\nexport const reducers = combineReducers({\n  posts,\n});\n","import { CREATE,\n  UPDATE,\n  LIKE,\n  DELETE,\n  FETCH_ALL } from '../constants/actionTypes'\n\n//state'll always be the posts,so you can name it whatever you want\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default (posts = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n    case CREATE:\n      return [...posts, action.payload];\n    case UPDATE:\n    case LIKE:\n      //We can remove the  LIKE case under UPDATE since they both do the same thing, but I keep it for readability\n      //action.payload is the newly updated post from memory\n      return posts.map(post => post._id === action.payload._id ? action.payload : post)\n    case DELETE:\n      // we keep all the posts, except the one that matches the id from the action.payload\n      return posts.filter(post => post._id !== action.payload);\n    default:\n      return posts;\n  }\n};","import axios from \"axios\";\n\n// this url was used for development locally\n// const url = \"http://localhost:8000/posts\";\n\n// using this url after deploying the server to heroku:\nconst url = 'https://memories-project-rb.herokuapp.com/posts';// you can still use localhost:3000 with this url\n\n//returns all the posts we currently have in the database\nexport const fetchPosts = () => axios.get(url);\nexport const createPost = (newPost) => axios.post(url, newPost);\nexport const likePost = (id) => axios.patch(`${url}/${id}/likePost`);\nexport const updatePost = (id, updatedPost) => axios.patch(`${url}/${id}`, updatedPost);\nexport const deletePost = (id) => axios.delete(`${url}/${id}`);\n\n// we can first create the route w/ its controller & then we can come here to make the api call & after move on to like action creator, etc.","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n  media: {\n    height: 0,\n    paddingTop: '56.25%',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    // backgroundBlendMode: 'darken', // adds opacity to the card image\n  },\n  border: {\n    border: 'solid',\n  },\n  fullHeightCard: {\n    height: '100%',\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    borderRadius: '15px',\n    height: '100%',\n    position: 'relative',\n  },\n  overlay: {\n    position: 'absolute',\n    top: '20px',\n    left: '20px',\n    color: 'white',\n  },\n  overlay2: {\n    position: 'absolute',\n    top: '20px',\n    right: '20px',\n    color: 'white',\n  },\n  grid: {\n    display: 'flex',\n  },\n  details: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    margin: '20px',\n  },\n  title: {\n    padding: '0 16px',\n  },\n  cardActions: {\n    padding: '0 16px 8px 16px',\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n});","// if only 1 component uses another component, like Post is inside Posts, then that component will be inside the other one that uses it\nimport React from \"react\";\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Button,\n  Typography,\n} from \"@material-ui/core\";\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport moment from \"moment\";\nimport { useDispatch } from 'react-redux'\n\nimport { deletePost, likePost } from '../../../actions/posts'\nimport useStyles from \"./styles\";\n\nconst Post = ({ post, setCurrentId }) => {\n  const dispatch = useDispatch()\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      <CardMedia\n        className={classes.media}\n        image={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'}\n        title={post.title}\n      />\n      <div className={classes.overlay}>\n        <Typography variant=\"h6\">{post.creator}</Typography>\n        <Typography variant=\"body2\">\n          {moment(post.createdAt).fromNow()}\n        </Typography>\n      </div>\n      <div className={classes.overlay2}>\n        <Button style={{ color: \"white\" }} size=\"small\" onClick={() => setCurrentId(post._id)}>\n          <MoreHorizIcon fontSize=\"default\" />\n        </Button>\n      </div>\n      <div className={classes.details}>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">\n          {post.tags.map((tag) => `#${tag} `)}\n        </Typography>\n      </div>\n      <Typography className={classes.title} variant=\"h5\" gutterBottom component=\"h2\">\n          {post.title}\n        </Typography>\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component='p'>\n          {post.message}\n        </Typography>\n      </CardContent>\n      <CardActions className={classes.cardActions}>\n        <Button size=\"small\" color=\"primary\" onClick={() => dispatch(likePost(post._id))}>\n          <ThumbUpAltIcon fontSize=\"small\" />\n          &nbsp; Like &nbsp;\n          {post.likeCount}\n        </Button>\n        <Button size=\"small\" color=\"primary\" onClick={() => dispatch(deletePost(post._id))}>\n          <DeleteIcon fontSize=\"small\" />\n          Delete\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\nexport default Post;\n","import { CREATE, UPDATE, LIKE, DELETE, FETCH_ALL } from \"../constants/actionTypes\";\nimport * as api from \"../api\"; // this import * as api means we'll be able to access it via api.whatever\n\n//action creators\n//since this is asynchronous, we have to use redux-thunk, so we have to modify the syntax for this\nexport const getPosts = () => async (dispatch) => {\n  //with redux-thunk, instead of returning the action, you have to dispatch the action:\n  try {\n    //we first get the response from the api & we destructure it & get 'data':\n    const { data } = await api.fetchPosts();\n\n    dispatch({ type: FETCH_ALL, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const createPost = (post) => async (dispatch) => {\n  try {\n    const { data } = await api.createPost(post);\n\n    dispatch({ type: CREATE, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const updatePost = (id, post) => async (dispatch) => {\n  try {\n    const { data } = await api.updatePost(id, post);\n\n    dispatch({ type: UPDATE, payload: data });\n  } catch (error) {\n    //this gives more info instead of of error.message\n    console.log(error);\n  }\n};\n\nexport const likePost = (id) => async (dispatch) => {\n  try {\n    const { data } = await api.likePost(id);\n\n    dispatch({ type: LIKE, payload: data });\n    // console.log(data)\n  } catch (error) {\n    //this gives more info instead of of error.message\n    console.log(error);\n  }\n};\n\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await api.deletePost(id);\n\n    dispatch({ type: DELETE, payload: id });\n  } catch (error) {\n    //this gives more info instead of of error.message\n    console.log(error);\n  }\n};\n","//Material's way of styling uses CSS & JS\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  mainContainer: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: 'center',\n  },\n}));","import React from \"react\";\nimport { Grid, CircularProgress } from '@material-ui/core'\nimport { useSelector } from \"react-redux\"; // to get something from the global store, use useSelector\n\nimport Post from \"./Post/Post\";\nimport useStyles from \"./styles\";\n\nconst Posts = ({ setCurrentId }) => {\n  // the name posts in state.posts comes from the reducers { posts }\n  const posts = useSelector((state) => state.posts); // useSelector gives you access to the whole redux store\n  const classes = useStyles();\n\n  return (\n    !posts.length ? <CircularProgress /> : (\n      <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\n        {posts.map(post => (\n          <Grid key={post._id} item xs={12} sm={6} md={6}>\n            <Post post={post} setCurrentId={setCurrentId} />\n          </Grid>\n        ))}\n      </Grid>\n    )\n  );\n};\n\nexport default Posts;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  form: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n  },\n  fileInput: {\n    width: '97%',\n    margin: '10px 0',\n  },\n  buttonSubmit: {\n    marginBottom: 10,\n  },\n}));","import React, { useState, useEffect } from \"react\";\nimport { TextField, Typography, Button, Paper } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FileBase from 'react-file-base64';\n\nimport useStyles from \"./styles\";\nimport { createPost, updatePost } from \"../../actions/posts\";\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [postData, setPostData] = useState({\n    creator: \"\",\n    title: \"\",\n    message: \"\",\n    tags: \"\",\n    selectedFile: \"\",\n  });\n  // if we have a currentId, then we loop over state.posts to .find the post p._id that has the same id as currentId:, otherwise return null\n  const post = useSelector((state) => currentId ? state.posts.find((message) => message._id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  useEffect(() => {\n    // if post exists, then we populate it's contents w/ the post variable from above\n    // in doing so, we can then edit anything from the post & update it\n    if (post) setPostData(post);\n  }, [post]);\n  \n  const clear = () => {\n    setCurrentId(0)\n    setPostData({\n      creator: \"\",\n      title: \"\",\n      message: \"\",\n      tags: \"\",\n      selectedFile: \"\",\n    })\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    //if we have a current id (id is not null)\n    if (currentId) {\n      dispatch(updatePost(currentId, postData)); // we need 2 parameters for this as per the routcontroller\n    } else {\n      dispatch(createPost(postData)); // if we don't have a currently selected id, it must mean that we're creating a post\n    }\n    clear()\n  };\n\n  return (\n    <Paper className={classes.paper}>\n      <form\n        autoComplete=\"off\"\n        noValidate\n        className={`${classes.root} ${classes.form}`}\n        onSubmit={handleSubmit}\n      >\n        <Typography variant=\"h6\">{currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'}</Typography>\n        <TextField\n          name=\"creator\"\n          variant=\"outlined\"\n          label=\"Creator\"\n          fullWidth\n          value={postData.creator}\n          onChange={(e) =>\n            setPostData({ ...postData, creator: e.target.value })\n          }\n        />\n        {/* Have to spread the onChange handler since setPostData have more than 1 property to update, otherwise just e.target.value for 1 object property would sufice */}\n        <TextField\n          name=\"title\"\n          variant=\"outlined\"\n          label=\"Title\"\n          fullWidth\n          value={postData.title}\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\n        />\n        <TextField\n          name=\"message\"\n          variant=\"outlined\"\n          label=\"Message\"\n          fullWidth\n          multiline \n          rows={4}\n          value={postData.message}\n          onChange={(e) =>\n            setPostData({ ...postData, message: e.target.value })\n          }\n        />\n        <TextField\n          name=\"tags\"\n          variant=\"outlined\"\n          label=\"Tags (coma separated)\"\n          fullWidth\n          value={postData.tags}\n          onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })}\n        />\n        <div className={classes.fileInput}>\n          <FileBase\n            type=\"file\"\n            multiple={false}\n            onDone={({ base64 }) =>\n              setPostData({ ...postData, selectedFile: base64 })\n            }\n          />\n        </div>\n        <Button\n          className={classes.buttonSubmit}\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          type=\"submit\"\n          fullWidth\n        >\n          Submit\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          onClick={clear}\n          fullWidth\n        >\n          Clear\n        </Button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Form;\n","import { makeStyles } from '@material-ui/core/styles'\n\nexport default makeStyles((theme) => ({\n    //parentheses wrapping {} means it immediately returns an object\n    appBar: {\n        borderRadius: 15,\n        margin: '30px 0',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n      },\n      heading: {\n        color: 'rgba(0,183,255, 1)',\n      },\n      image: {\n        marginLeft: '15px',\n      },\n      [theme.breakpoints.down('sm')]: {\n        mainContainer: {\n        flexDirection: 'column-reverse'\n      }\n      }\n}))","export default __webpack_public_path__ + \"static/media/memories.9cfa8a46.png\";","import React, { useState, useEffect } from \"react\";\nimport { Container, AppBar, Typography, Grow, Grid } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\n\nimport Posts from \"./components/Posts/Posts\";\nimport Form from \"./components/Form/Form\";\nimport { getPosts } from \"./actions/posts\";\nimport useStyles from \"./styles\";\nimport memories from \"./images/memories.png\";\n\nconst App = () => {\n  const [currentId, setCurrentId] = useState(0);\n  const dispatch = useDispatch(); //best place to run dispatch to the server backend is inside useEffect\n  const classes = useStyles();\n\n  useEffect(() => {\n    //you put the redux action inside the dispatch\n    dispatch(getPosts());\n  }, [currentId, dispatch]);\n\n  return (\n    <Container maxWidth=\"lg\">\n      <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n        <Typography className={classes.heading} variant=\"h2\" align=\"center\">\n          Message\n        </Typography>\n        <img\n          className={classes.image}\n          src={memories}\n          alt=\"icon\"\n          height=\"60\"\n        />\n      </AppBar>\n      <Grow in>\n        <Container>\n          <Grid\n            className={classes.mainContainer}\n            container\n            justify=\"space-between\"\n            alignItems=\"stretch\"\n            spacing={3}\n          >\n            <Grid item xs={12} sm={7}>\n              <Posts setCurrentId={setCurrentId} />\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <Form currentId={currentId} setCurrentId={setCurrentId} />\n            </Grid>\n          </Grid>\n        </Container>\n      </Grow>\n    </Container>\n  );\n};\n\nexport default App;\n","//he erased the whole src folder & just began from scratch\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport { reducers } from './reducers';\nimport App from \"./App\";\nimport \"./index.css\";\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}